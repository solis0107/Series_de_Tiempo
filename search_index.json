[["requerimientos.html", "Capítulo 2 Requerimientos 2.1 Instalación de librerias 2.2 Importe de los datos 2.3 Formato", " Capítulo 2 Requerimientos En este apartado se detallará el importe y preparación de los datos utilizados al igual que las librerías que se requieren instalar para el desarrollo de este libro. 2.1 Instalación de librerias install.packages(&quot;readxl&quot;) ## The following package(s) will be installed: ## ## - readxl [1.4.3] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing readxl ... OK [linked from cache in 0.0013s] ## ## Successfully installed 1 package in 16 milliseconds. install.packages(&quot;forecast&quot;) ## The following package(s) will be installed: ## ## - forecast [8.21] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing forecast ... OK [linked from cache in 0.0018s] ## ## Successfully installed 1 package in 20 milliseconds. install.packages(&quot;tseries&quot;) ## The following package(s) will be installed: ## ## - tseries [0.10-54] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing tseries ... OK [linked from cache in 0.0012s] ## ## Successfully installed 1 package in 14 milliseconds. install.packages(&quot;trend&quot;) ## The following package(s) will be installed: ## ## - trend [1.1.5] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing trend ... OK [linked from cache in 0.0014s] ## ## Successfully installed 1 package in 14 milliseconds. install.packages(&quot;Kendall&quot;) ## The following package(s) will be installed: ## ## - Kendall [2.2.1] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing Kendall ... OK [linked from cache in 0.0014s] ## ## Successfully installed 1 package in 16 milliseconds. install.packages(&quot;ggplot2&quot;) ## The following package(s) will be installed: ## ## - ggplot2 [3.4.3] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing ggplot2 ... OK [linked from cache in 0.0016s] ## ## Successfully installed 1 package in 15 milliseconds. install.packages(&quot;ggfortify&quot;) ## The following package(s) will be installed: ## ## - ggfortify [0.4.16] ## ## These packages will be installed into &quot;C:/Users/JSOLISP/OneDrive - TCC/Escritorio/PERSN/Universidad/Series_de_tiempo/PROYECTO_BOOKDOWN/renv/library/R-4.3/x86_64-w64-mingw32&quot;. ## ## # Installing packages -------------------------------------------------------- ## ## - Installing ggfortify ... OK [linked from cache in 0.0013s] ## ## Successfully installed 1 package in 14 milliseconds. 2.2 Importe de los datos library(readxl) ruta_archivo &lt;- &quot;datos.xlsx&quot; nombre_hoja &lt;- &quot;datos&quot; datos &lt;- read_excel(ruta_archivo, sheet = &#39;datos&#39;) 2.3 Formato Es requerido para el desarrollo que la serie de tiempo tenga el formato de fecha en tipo Date datos$Date &lt;- as.Date(datos$Date) Creación de la serie de tiempo: serie_tiempo &lt;- ts(datos$Volume, start = min(datos$Date), frequency = 7) "],["análisis-de-descriptivo-y-transformaciones.html", "Capítulo 3 Análisis de descriptivo y transformaciones 3.1 Visualización Inicial 3.2 Parametros de la seire de tiempo 3.3 Descomponsición de la serie 3.4 Analisis de Tendencia 3.5 Analisis de Estacionalidad 3.6 Análisis de estacionariedad 3.7 Tranformación (Diferenciación)", " Capítulo 3 Análisis de descriptivo y transformaciones 3.1 Visualización Inicial La serie de tiempo a analizar muestra el volumen de llamadas que ingresan diariamente en una linea telefónica; demos una primera visualización a la serie de tiempo que se analizará: library(ggplot2) ggplot(datos, aes(x = Date, y = Volume)) + geom_line() + labs(x = &quot;Fechas&quot;, y = &quot;Valores&quot;, title = &quot;Serie de Tiempo&quot;)+ scale_x_date(date_breaks = &quot;1 month&quot;, date_labels = &quot;%Y-%B&quot;)+ theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) De forma general podemos ver que la serie de tiempo muestra un comportamiento estacional, sin una clara tendencia. No se evidencian valores atípicos significativos, pero estos se validaran próximamente. 3.2 Parametros de la seire de tiempo Exploremos el tipo de dato y la ventana de tiempo en la que se presenta esta serie: min_date &lt;- min(datos$Date) max_date &lt;- max(datos$Date) tipo_dato &lt;- class(serie_tiempo) print(paste(&quot;Mínimo día:&quot;, min_date)) ## [1] &quot;Mínimo día: 2022-05-22&quot; print(paste(&quot;Máximo día:&quot;, max_date)) ## [1] &quot;Máximo día: 2023-04-09&quot; print(paste(&quot;Tipo de dato:&quot;, tipo_dato)) ## [1] &quot;Tipo de dato: ts&quot; Confirmamos que la serie de tiempo quedo en el formato correcto “ts” y que esta trae datos desde el 22 de mayo del 2022 hasta el 9 de abril del 2023. En este apartado haremos un análisis descriptivo de la serie de tiempo, exploraremos sus componentes y aplicaremos alguna transformación en caso de esta sea requerida. 3.3 Descomponsición de la serie Iniciemos descomponiendo la serie de tiempo de forma aditiva, dado que la amplitud de las estacionalidades se mantiene en el tiempo,no se considera la descomposición multiplicativa. library(ggplot2) library(ggfortify) # Descomposición de la serie de tiempo fit &lt;- decompose(serie_tiempo, type=&#39;additive&#39;) autoplot(fit)+ labs(title = &quot;Descomposición de la serie de tiempo&quot;, x = &quot;Tiempo&quot;, y = &quot;Valor&quot;, colour = &quot;Gears&quot;)+ theme_bw() ## Warning: Removed 12 rows containing missing values (`geom_line()`). De forma general podemos ver que no hay una clara tendencia, aunque por ventanas de tiempo si se logra mantener una tendencia al alza o a la baja. La serie presenta una fuerte estacionalidad, la cual es homogenea para todo el periodo analizado. Los residuos presentan un buen comportamiento, están centrados en cero y no tienen un patron marcado, se pueden considerar aleatorios. 3.4 Analisis de Tendencia Dado que la existencia de tendencia en la serie no es muy clara, se ejecutara el test Kendall para definir si existe o no tendencia en la serie analizada: Ho: La serie no tiene tendencia H1: La serie si presenta tendencia library(Kendall) mk_test &lt;- Kendall(y=datos$Volume, x =datos$Date ) summary(mk_test) ## Score = -5464 , Var(Score) = 3761233 ## denominator = 51884.36 ## tau = -0.105, 2-sided pvalue =0.0048495 A un nivel de significancia del 0.05 se concluye que hay evidencia suficiente para soportar que la serie si presenta tendencia. 3.5 Analisis de Estacionalidad La estacionalidad de esta serie es bastante clara, pero podemos tener mayor detalle de esta analizando las gráficas ACF y PACF. La gráfica de ACF y PACF muestran la correlación entre una serie de tiempo y sus valores rezagados, pero la gráfica PACF elimina la influencia de los rezagos intermedios. En otras palabras, muestra la correlación directa entre dos puntos en el tiempo después de eliminar la correlación indirecta a través de otros rezagos. par(mfrow = c(1, 2)) acf(serie_tiempo) pacf(serie_tiempo) Por la forma en que se presentan los rezagos en la gráfica ACF se puede evidenciar que si existe una un patrón en la serie de tiempo de de 7 tiempos. Esto tiene sentido dado que la periodicidad del proceso analizado es semanal. 3.6 Análisis de estacionariedad Una serie de tiempo se considera estacionaria cuando sus propiedades estadísticas se mantienen constantes a lo largo del tiempo, lo que significa que no muestra cambios sistemáticos en su media, varianza y autocorrelación a medida que avanza el tiempo. En términos más simples, una serie de tiempo estacionaria es una serie en la que los patrones y características se repiten de manera consistente en diferentes períodos. Se utilizara el test ADF para probar si existe estacionariedad en la serie estudiada: Ho: La serie es no estacionaria: tiene raíz unitaria H1: La serie es estacionaria: no tiene raíz unitaria library(tseries) ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo adf.test(serie_tiempo) ## ## Augmented Dickey-Fuller Test ## ## data: serie_tiempo ## Dickey-Fuller = -1.8044, Lag order = 6, p-value = 0.659 ## alternative hypothesis: stationary Con un nivel de significance de 0.05 se concluye que no hay evidencia sufifiencte para decir que la serie es estacionaria, esto resultado es coherente con el test de tendencia el cual mostró que la serie efectivamente si presenta una tendencia en el tiempo. 3.6.1 Análisis de rezagos El análisis de rezagos se utiliza para ver la correlación que existe entre los valores y el n valor rezagado; analicemos la relación que existe entre cada valor y sus primeros 8 rezagos, considero que los primeros 8 son suficiente dado que se esperaría ver una relación de los días de la semana entre sí, Osea lunes-lunes, martes-martes… etc. library(ggplot2) lag.plot(serie_tiempo,lags=8,layout=c(2,4)) La gráfica de ACF muestra la correlación entre una serie de tiempo y sus valores rezagados (anteriores) en diferentes intervalos de tiempo. Cada barra en la gráfica representa la correlación en un rezago específico. Como era de esperarse, se evidencia un patrón claro en el lag 7, esto significa que hay una alta correlación entre la serie y 7 rezagos. 3.7 Tranformación (Diferenciación) Dado que la serie presenta tendencia, se debe intentará quitar esta tendencia con el metodo de defierenciación. seriedf1 =diff(serie_tiempo,differences=1) Analicemos la serie transformada library(ggplot2) library(ggfortify) # Descomposición de la serie de tiempo fit &lt;- decompose(seriedf1, type=&#39;additive&#39;) autoplot(fit)+ labs(title = &quot;Descomposición de la serie de tiempo&quot;, x = &quot;Tiempo&quot;, y = &quot;Valor&quot;, colour = &quot;Gears&quot;)+ theme_bw() ## Warning: Removed 12 rows containing missing values (`geom_line()`). Efectivamente se redujo la tendencia en la serie de tiempo, sobre todo en los últimos meses de el expectro analizado, originalmente este tenia una tendencia a la baja y ahora se ve mucho mas suavizado. Confirmemos la no existencia de tendencia ejecutando nuevamente el test ADF Ho: La serie es no estacionaria: tiene raíz unitaria H1: La serie es estacionaria: no tiene raíz unitaria library(tseries) adf.test(seriedf1) ## Warning in adf.test(seriedf1): p-value smaller than printed p-value ## ## Augmented Dickey-Fuller Test ## ## data: seriedf1 ## Dickey-Fuller = -12.545, Lag order = 6, p-value = 0.01 ## alternative hypothesis: stationary A un nivel de significancia del 0.05 podemos concluir que hay evidencia suficiente para decir que la serie es estacionaria por lo que se confirma la eliminación de la tendencia. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
